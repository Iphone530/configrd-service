version: 2
jobs:
  build-service:
    docker:
    - image: circleci/openjdk:8u171-jdk-stretch
    environment:
      CC_TEST_REPORTER_ID: 3195f456f8512c7f896c253646f4860352f164c0bcc699568f6ebb9571b39302
    steps:
    - checkout
    - run:
        name: Download vault
        command: "curl https://releases.hashicorp.com/vault/0.11.1/vault_0.11.1_linux_amd64.zip --output ./vault.zip \
                  unzip vault.zip \
                  ./vault server -dev & \
                  export VAULT_ADDR=http://127.0.0.1:8200 \
                  sleep 2 \
                  ./vault auth enable userpass \
                  ./vault write auth/userpass/users/test password=password policies=admins \
                  ./vault policy write admins src/test/resources/vault-setup/admin.hcl"
    - run: mvn clean install -B -s .circleci/settings.xml -Daws.accessKeyId=${AWS_ACCESS_KEY_ID} -Daws.secretKey={AWS_SECRET_KEY}
    - save_cache:
        key: configrd-service-{{ .Branch }}-{{ checksum "pom.xml" }}-{{ .Environment.CIRCLE_SHA1 }}
        paths:
        - target
        - ./vault
        - ~/.m2
    - store_test_results:
        paths:
        - target/surefire-reports
        - target/failsafe-report
  deploy-service:
    docker:
    - image: circleci/openjdk:8-jdk
    steps:
    - checkout
    - restore_cache:
        keys:
        - configrd-service-{{ .Branch }}-{{ checksum "pom.xml" }}-{{.Environment.CIRCLE_SHA1}}
    - run: mvn jar:jar deploy:deploy -B -DskipTests -s .circleci/settings.xml
    - store_artifacts:
        path: target
  docker-push:
    docker:
    - image: circleci/openjdk:8-jdk
    steps:
    - checkout
    - restore_cache:
        key: configrd-service-{{ .Branch }}-{{ checksum "pom.xml" }}-{{.Environment.CIRCLE_SHA1}}
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: Build and push docker image
        command: |
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          set +e
          docker pull $DOCKERHUB/${DOCKER_IMAGE_NAME}:latest
          docker build --cache-from $DOCKERHUB/${DOCKER_IMAGE_NAME}:latest -t $DOCKERHUB/${DOCKER_IMAGE_NAME}:${CIRCLE_SHA1:0:7} .
          docker push $DOCKERHUB/${DOCKER_IMAGE_NAME}:${CIRCLE_SHA1:0:7}
          docker tag $DOCKERHUB/${DOCKER_IMAGE_NAME}:${CIRCLE_SHA1:0:7} $DOCKERHUB/${DOCKER_IMAGE_NAME}:latest
          docker push $DOCKERHUB/${DOCKER_IMAGE_NAME}:latest
workflows:
  version: 2
  build_push:
    jobs:
    - build-service
    - deploy-service:
        requires:
        - build-service
    - docker-push:
        filters:
          branches:
            only:
            - master
        requires:
        - deploy-service