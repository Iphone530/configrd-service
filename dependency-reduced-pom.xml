<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.configrd</groupId>
  <artifactId>configrd-service</artifactId>
  <name>Configrd Service</name>
  <version>2.0.0</version>
  <description>External configuration service</description>
  <url>https://github.com/configrd/configrd-service</url>
  <scm>
    <connection>scm:git:https://github.com/configrd/configrd-service</connection>
    <developerConnection>scm:git:https://github.com/configrd/configrd-service</developerConnection>
    <url>https://github.com/configrd/configrd-service</url>
  </scm>
  <build>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.1</version>
        <executions>
          <execution>
            <id>jacoco-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile>
              <propertyName>${surefireArgLine}</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>post-integration-test</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
            </configuration>
          </execution>
          <execution>
            <id>jacoco-site</id>
            <phase>package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm</artifactId>
            <version>7.0</version>
          </dependency>
        </dependencies>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.1</version>
        <dependencies>
          <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm</artifactId>
            <version>7.0</version>
          </dependency>
        </dependencies>
        <configuration>
          <includes>
            <include>**/Test*.java</include>
          </includes>
          <argLine>-Djdk.net.URLClassPath.disableClassPathURLCheck=true</argLine>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm</artifactId>
            <version>7.0</version>
          </dependency>
        </dependencies>
        <configuration>
          <includes>
            <include>**/*ITCase.java</include>
          </includes>
          <systemPropertyVariables>
            <aws.accessKeyId>${aws.accessKey}</aws.accessKeyId>
            <aws.secretKey>${aws.secret}</aws.secretKey>
          </systemPropertyVariables>
          <argLine>-Djdk.net.URLClassPath.disableClassPathURLCheck=true</argLine>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer />
                <transformer>
                  <mainClass>io.configrd.service.ConfigrdServer</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <repositories>
    <repository>
      <releases />
      <id>tickerstorm-releases</id>
      <name>TickerStorm Releases</name>
      <url>https://tickerstorm.jfrog.io/tickerstorm/release</url>
    </repository>
    <repository>
      <snapshots />
      <id>tickerstorm-snapshots</id>
      <name>TickerStorm Releases</name>
      <url>https://tickerstorm.jfrog.io/tickerstorm/snapshot</url>
    </repository>
  </repositories>
  <dependencies>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <version>5.1.1</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>apiguardian-api</artifactId>
          <groupId>org.apiguardian</groupId>
        </exclusion>
        <exclusion>
          <artifactId>junit-platform-engine</artifactId>
          <groupId>org.junit.platform</groupId>
        </exclusion>
        <exclusion>
          <artifactId>junit</artifactId>
          <groupId>junit</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <version>2.26</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>jersey-entity-filtering</artifactId>
          <groupId>org.glassfish.jersey.ext</groupId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.spring.platform</groupId>
        <artifactId>platform-bom</artifactId>
        <version>Cairo-SR4</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <distributionManagement>
    <repository>
      <id>tickerstorm-releases</id>
      <name>tickerstorm-releases</name>
      <url>https://tickerstorm.jfrog.io/tickerstorm/release</url>
    </repository>
    <snapshotRepository>
      <id>tickerstorm-snapshots</id>
      <name>tickerstorm-snapshots</name>
      <url>https://tickerstorm.jfrog.io/tickerstorm/snapshot</url>
    </snapshotRepository>
  </distributionManagement>
  <properties>
    <java.version>1.8</java.version>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
    <build.timestamp>${maven.build.timestamp}</build.timestamp>
  </properties>
</project>
